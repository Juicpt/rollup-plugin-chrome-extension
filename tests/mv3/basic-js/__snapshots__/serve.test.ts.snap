// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`serve fs output: _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_popup": "src/popup.html",
  },
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "assets/content-script-loader.content.hash.js",
      ],
      "matches": Array [
        "https://a.com/*",
        "http://b.com/*",
      ],
    },
  ],
  "description": "test extension",
  "host_permissions": Array [
    "https://c.com/*",
  ],
  "manifest_version": 3,
  "name": "Test Extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`serve fs output: _01 output files 1`] = `
Array [
  "_virtual/src/content.js",
  "_virtual/vendor/crx-client-port.js",
  "_virtual/vendor/vite-client-env.js",
  "_virtual/vendor/vite-client.js",
  "assets/content-script-loader.content.hash.js",
  "assets/precontroller.hash.js",
  "manifest.json",
  "service-worker-loader.js",
  "src/popup.html",
]
`;

exports[`serve fs output: _virtual/src/content.js 1`] = `
"console.log('content script');
if (import.meta.hot) {
  import.meta.hot.on(\\"crx:full-reload\\", () => {
    console.log(\\"[crx] full reload\\");
    setTimeout(() => location.reload(), 500);
  });
}
"
`;

exports[`serve fs output: assets/content-script-loader.content.hash.js 1`] = `
"(function () {
  'use strict';

  function crxUrlWithTime(url) {
    const crxUrl = new URL(chrome.runtime.getURL(url));
    const time = 1643155200000;
    crxUrl.searchParams.set(\\"t\\", time.toString());
    return crxUrl.href;
  }
  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        crxUrlWithTime(\\"\\")
      );
    await import(
      /* @vite-ignore */
      crxUrlWithTime(\\"_virtual/vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      crxUrlWithTime(\\"_virtual/src/content.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`serve fs output: assets/precontroller.hash.js 1`] = `
"setTimeout(() => location.reload(), 100);
"
`;

exports[`serve fs output: service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@crx/client/worker';
import 'http://localhost:3000/src/background.js';
"
`;

exports[`serve fs output: src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <title>Waiting for the extension service worker...</title>
    <script src=\\"/assets/precontroller.hash.js\\"></script>
  </head>
  <body>
    <h1>Waiting for service worker</h1>

    <p>
      If you see this message, it means the service worker has not loaded fully.
    </p>

    <p>
      During development, the service worker reroutes HTML requests to the dev
      server, so this file isn't used unless the extension service worker opens
      a page immediately after a full extension reload, and before the service
      worker takes control of fetch (e.g., in the onInstalled event). In that
      case, this page will continuously reload until the service worker is
      ready, always less than 100 ms.
    </p>

    <p>This page is never added in production.</p>
  </body>
</html>
"
`;
