// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`serve fs output: _00 manifest.json 1`] = `
Object {
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "assets/content-script-loader.declared-script.ts.hash.js",
      ],
      "matches": Array [
        "https://a.com/*",
        "http://b.com/*",
      ],
    },
  ],
  "manifest_version": 3,
  "name": "test extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`serve fs output: _01 output files 1`] = `
Array [
  "_virtual/src/declared-script.ts.js",
  "_virtual/src/dynamic-script.ts.js",
  "_virtual/src/main-world.ts.js",
  "_virtual/vendor/crx-client-port.js",
  "_virtual/vendor/crx-dynamic-src-main-world.ts.js",
  "_virtual/vendor/vite-client-env.js",
  "_virtual/vendor/vite-client.js",
  "assets/content-script-loader.declared-script.ts.hash.js",
  "assets/content-script-loader.dynamic-script.ts.hash.js",
  "assets/precontroller.hash.js",
  "manifest.json",
  "service-worker-loader.js",
]
`;

exports[`serve fs output: _virtual/src/declared-script.ts.js 1`] = `
"import fileName from '../vendor/crx-dynamic-src-main-world.ts.js';

console.log(\\"declared script\\");
const script = document.createElement(\\"script\\");
script.src = chrome.runtime.getURL(fileName);
script.type = \\"module\\";
document.head.prepend(script);
if (import.meta.hot) {
  import.meta.hot.on(\\"crx:full-reload\\", () => {
    console.log(\\"[crx] full reload\\");
    setTimeout(() => location.reload(), 500);
  });
}
"
`;

exports[`serve fs output: _virtual/src/dynamic-script.ts.js 1`] = `
"console.log(\\"dynamic script\\");
if (import.meta.hot) {
  import.meta.hot.on(\\"crx:full-reload\\", () => {
    console.log(\\"[crx] full reload\\");
    setTimeout(() => location.reload(), 500);
  });
}
"
`;

exports[`serve fs output: _virtual/src/main-world.ts.js 1`] = `
"console.log(\\"main world script\\");
if (import.meta.hot) {
  import.meta.hot.on(\\"crx:full-reload\\", () => {
    console.log(\\"[crx] full reload\\");
    setTimeout(() => location.reload(), 500);
  });
}
"
`;

exports[`serve fs output: assets/content-script-loader.declared-script.ts.hash.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"_virtual/vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"_virtual/src/declared-script.ts.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`serve fs output: assets/content-script-loader.dynamic-script.ts.hash.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"_virtual/vendor/vite-client.js\\")
    );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"_virtual/src/dynamic-script.ts.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`serve fs output: assets/precontroller.hash.js 1`] = `
"setTimeout(() => location.reload(), 100);
"
`;

exports[`serve fs output: service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@crx/client/worker';
import 'http://localhost:3000/src/background.ts';
"
`;
